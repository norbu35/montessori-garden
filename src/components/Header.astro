---
import { Image } from "astro:assets";
import icon_menu from "../assets/icons/icon-menu.webp";
---

<header class="container">
  <div class="banner">
    <div class="title">
      <a href="/">
        <h1 class="main">Montessori Garden</h1>
        <h1 class="sub">Kentish Town</h1>
      </a>
    </div>
    <button type="button" class="menu-btn">
      <Image
        class="menu-icon"
        src={icon_menu}
        alt="menu button"
        width="38"
        height="23"
      />
    </button>
  </div>
  <nav class="nav" id="nav">
    <ul class="links">
      <li class="link link--hover js-link--hover">
        Our Nursery
        <ul class="sublinks">
          <li class="link"><a href="/curriculum">Curriculum</a></li>
          <li class="link">
            <a href="/montessori-method"> The Montessori Method</a>
          </li>
          <li class="link"><a href="/a-typical-day">A Typical Day</a></li>
          <li class="link"><a href="/our-staff">Our Qualified Staff</a></li>
          <li class="link"><a href="/virtual-tour">Virtual Tour</a></li>
        </ul>
      </li>
      <li class="link">
        <a href="/enrolment">Enrolment</a>
      </li>
      <li class="link link--hover js-link--hover">
        News & Events
        <ul class="sublinks">
          <li class="link"><a href="/calendar">Calendar Events</a></li>
          <li class="link"><a href="/news">News</a></li>
        </ul>
      </li>
      <li class="link"><a href="/contact">Contact</a></li>
      <li class="link"><a href="/visit">Visit Us</a></li>
      <li class="link">Parents' Corner</li>
      <li class="link link--secondary">Staff Area</li>
    </ul>
  </nav>
</header>
<button class="btn-top"></button>

<script>
  const nav = document.getElementById("nav");
  const button = document.querySelector(".menu-btn");
  const links = document.querySelectorAll(".link");
  const expandingLinks = document.querySelectorAll(".js-link--hover");

  let windowWidth = window.innerWidth;

  attachEventListeners();

  links.forEach((el) => {
    if (el.querySelector("a")?.getAttribute("href") === location.pathname) {
      el.querySelector("a")?.classList.add("link--active");
    }
  });

  function attachEventListeners() {
    if (button === null || nav === null) {
      throw Error;
    } else {
      button.addEventListener("click", toggleNavExpand);
    }

    if (windowWidth < 992) {
      attachClickListeners();
    } else {
      attachHoverListeners();
    }
  }

  function attachClickListeners() {
    expandingLinks.forEach((el) => {
      el.addEventListener("click", toggleLinkExpand);
    });
  }

  function removeClickListeners() {
    expandingLinks.forEach((el) => {
      el.removeEventListener("click", toggleLinkExpand);
    });
  }

  function attachHoverListeners() {
    expandingLinks.forEach((el) => {
      el.addEventListener("mouseenter", onLinkExpand);
      el.addEventListener("mouseleave", onLinkClose);
    });
  }

  function removeHoverListeners() {
    expandingLinks.forEach((el) => {
      el.removeEventListener("mouseenter", onLinkExpand);
      el.removeEventListener("mouseleave", onLinkClose);
    });
  }

  function toggleNavExpand() {
    nav?.classList.toggle("nav--expanded");
    onLinkCloseAll();
  }

  function onNavClose() {
    nav?.classList.remove("nav--expanded");
    onLinkCloseAll();
  }

  function toggleLinkExpand(e: Event): void {
    onLinkCloseAll();
    const target = e.target as HTMLElement;
    const directChild = target.querySelector(":scope > .sublinks");
    if (directChild) {
      directChild.classList.toggle("sublinks--expanded");
    }
  }

  function onLinkExpand(e: Event): void {
    const target = e.target as HTMLElement;
    const directChild = target.querySelector(":scope > .sublinks");
    if (directChild) {
      directChild.classList.add("sublinks--expanded");
    }
  }

  function onLinkCloseAll() {
    expandingLinks.forEach((el) => {
      const target = el.querySelector(".sublinks") as HTMLElement;
      target.classList.remove("sublinks--expanded");
    });
  }

  function onLinkClose(e: Event): void {
    const target = e.target as HTMLElement;
    const directChild = target.querySelector(":scope > .sublinks");
    if (directChild) {
      directChild.classList.toggle("sublinks--expanded");
    }
  }

  window.addEventListener("resize", () => {
    windowWidth = window.innerWidth;
    onNavClose();
    onLinkCloseAll();

    if (windowWidth < 992) {
      removeHoverListeners();
      attachClickListeners();
    } else {
      removeClickListeners();
      attachHoverListeners();
    }
  });

  window.addEventListener("scroll", onNavClose);
  window.addEventListener("scroll", onLinkClose);
</script>

<style lang="scss">
  @import "../styles/vars.scss";

  .container {
    height: $ht-header-sm;
    background-color: white;

    @media only screen and (min-width: $md) {
      height: $ht-header-md;
    }

    .banner {
      justify-content: space-between;
      display: flex;
      width: 100%;
      height: 100%;
      padding: 0 1em;

      .logo {
        width: 17%;
      }

      .title {
        justify-content: center;
        flex-direction: column;
        display: flex;
        color: $green;

        @media only screen and (min-width: $md) {
          padding-left: 3rem;
        }

        a:visited,
        a {
          text-decoration: none;
          color: $green;
        }

        .main {
          align-items: center;
          display: flex;
          height: 60%;
          font-size: 2.25rem;
          font-family: "Caveat";
          font-weight: 600;

          @media only screen and (min-width: $md) {
            font-size: 3rem;
          }
        }

        .sub {
          align-items: center;
          display: flex;
          height: 40%;
          margin-top: -8px;
          font-size: 1.25rem;
          font-family: "Mukta";
          font-weight: 500;
          @media only screen and (min-width: $md) {
            font-size: 1.5rem;
          }
        }
      }

      .menu-btn {
        justify-content: center;
        display: none;
        align-items: center;
        display: flex;
        margin-right: 10px;
        border: none;
        background: none;

        @media only screen and (min-width: $md) {
          margin-right: 15px;
        }

        @media only screen and (min-width: $lg) {
          display: none;
        }

        .menu-icon {
          width: 30px;

          height: 20px;

          @media only screen and (min-width: $md) {
            width: 35px;
            height: 25px;
          }
        }
      }
    }

    .nav {
      z-index: 2;
      position: absolute;
      right: 0;
      overflow: hidden;
      transition: max-height 400ms;
      background-color: white;
      width: 100vw;
      max-height: 0;
      height: fit-content;
      font-family: "Mukta";
      font-weight: 500;
      color: $green;

      @media only screen and (min-width: $md) {
        padding: 0 2rem;
        width: 70vw;
      }

      @media only screen and (min-width: $lg) {
        position: absolute;
        top: 70px;
        right: 20px;
        overflow: visible;
        height: 2em;
        width: 625px;
        padding: 0;
        font-size: 1em;
      }

      .links {
        z-index: 1;
        position: aboslute;
        float: right;
        flex-direction: column;
        display: flex;
        gap: 1em;
        width: 50%;
        padding: 1em 1.5em;

        @media only screen and (min-width: $lg) {
          float: initial;
          gap: 0;
          justify-content: space-between;
          margin-left: 1em;
          flex-direction: row;
          width: 100%;
          padding: 0;
        }

        .link {
          justify-content: flex-end;
          align-items: center;
          display: flex;
          height: 1.5em;
          transition: transform 200ms ease;
          position: relative;

          &:hover {
            transform: scale(115%);
          }

          @media only screen and (min-width: $lg) {
            justify-content: center;
          }

          & > a,
          & > :visited {
            text-decoration: none;
            color: $green;
          }
        }

        .link--hover:before {
          content: "‚Üê";
          align-items: center;
          display: flex;
          margin-right: 1em;

          @media only screen and (min-width: $lg) {
            display: none;
          }
        }

        .link--secondary {
          @media only screen and (min-width: $lg) {
            display: none;
          }
        }

        .link--active {
          border-bottom: 2px solid $green;
        }

        .sublinks {
          z-index: 0;
          position: absolute;
          right: 100%;
          top: -1em;
          gap: 1em;
          flex-direction: column;
          display: flex;
          overflow: hidden;
          transition: width 400ms, padding 400ms ease-out, margin 400ms ease;
          width: 0;
          padding: 1em 0;
          white-space: nowrap;

          .link {
            font-size: 0.9em;
            margin-right: 1em;
          }

          @media only screen and (min-width: $lg) {
            top: 1.5em;
            left: 0;
            transition: height 400ms ease, margin 400ms ease;
            justify-content: flex-start;
            align-items: flex-start;
            width: 250px;
            height: 0;
            padding: 0;
            background-color: white;
          }
        }

        .sublinks--expanded {
          z-index: 3;
          transition: width 400ms ease-out, padding 400ms ease-out;
          padding: 1em 0.5em;
          width: 250px;
          white-space: nowrap;
          transition-delay: 0.4s;

          @media only screen and (min-width: $lg) {
            transition: height 400ms ease-out, padding 400ms ease-out;
            width: 250px;
            height: fit-content;
          }

          .link {
            @media only screen and (min-width: $lg) {
              margin-left: 1em;
            }
          }
        }
      }
    }

    .nav--expanded {
      max-height: 300px;
      height: fit-content;
      transition: max-height 400ms;
    }
  }
</style>
