---
import * as jose from "jose";
import Layout from "../layouts/Layout.astro";
import SectionLayout from "../layouts/SectionLayout.astro";

const secret = import.meta.env.SECRET;
const url = new URL(Astro.request.url);
const token = url.searchParams.get("token");
const key = new TextEncoder().encode(secret);

if (token) {
  try {
    const { payload } = await jose.jwtVerify(token, key);
    if (payload.user !== "parent") return Astro.redirect("/login?renew=true");
  } catch (e) {
    return Astro.redirect("/login?renew=true");
  }
}
---

<Layout
  title="Parents' Corner"
  description="Information for parents | Montessori Garden"
>
  <SectionLayout heading="Parents' Corner">
    <h2>Parents' Involvement</h2>
    <p>
      We welcome and encourage parents to come in to share their skills,
      cultures and traditions or to just read a book or do gardening with the
      children. Please let Manager on Duty know if you are interested and we
      will be happy to set it up.
    </p>
    <h2>Communication</h2>
    <p>
      When drop-off and pick-up become a bit busy for detailed conversations,
      our parents are invited to arrange a convenient time by ringing the School
      directly on the following numbers: Montessori Garden Kentish Town - 020
      3441 5860 or 07470 984 783 or contact@montessorigarden.co.uk
    </p>
    <h2>Current Staff</h2>
    <p>
      Parents can view our current staff introduction on the Parents' Notice
      Board in the Hallway.
    </p>
    <h2>Useful documents</h2>
    <ul>
      <li>
        <a href="/terms-and-conditions.pdf" class="download"
          >Terms & Conditions (June 2020)</a
        >
      </li>
      <li>
        <a href="/change-of-tenure.pdf" class="download">Change of Tenure</a>
      </li>
    </ul>
    <h2>Policies & Procedures</h2>
    <p>
      Our Policies & Procedures most relevant for Parents can be accessed
      through the links below and the full version can be viewed at the setting.
    </p>
    <ul>
      <li>
        <a href="/vision-ethos-beliefs.pdf" class="download"
          >Our Vision and Ethos</a
        >
      </li>
      <li>
        <a href="/settling-in.pdf" class="download"
          >Admissions and Settling In</a
        >
      </li>
      <li>
        <a href="/concerns-and-complaints.pdf" class="download"
          >Concerns and Complaints</a
        >
      </li>
      <li>
        <a href="/sickness-illness.pdf" class="download">Sickness and Illness</a
        >
      </li>
      <li>
        <a href="/administration-of-medication.pdf" class="download"
          >Administration of Medication</a
        >
      </li>
      <li>
        <a href="/accidents-incidents-first_aid.pdf" class="download"
          >Accidents, Incidents and First-aid</a
        >
      </li>
      <li>
        <a href="/hygiene.pdf" class="download">Hygiene</a>
      </li>
      <li>
        <a href="/behaviour-management.pdf" class="download"
          >Behaviour Management</a
        >
      </li>
      <li>
        <a href="/healthy-eating.pdf" class="download">Healthy Eating</a>
      </li>
      <li>
        <a href="/food-handling.pdf" class="download">Food Handling</a>
      </li>
    </ul>
  </SectionLayout>
</Layout>

<script>
  import { fromCognitoIdentityPool } from "@aws-sdk/credential-providers";
  import { GetObjectCommand, S3Client } from "@aws-sdk/client-s3";

  const links = document.querySelectorAll(".download");
  links.forEach((el) => {
    el.addEventListener("click", async (e) => {
      e.preventDefault();
      const target = e.target as HTMLElement;
      target.parentElement?.classList.add("download--loading");

      const el = e.target as HTMLElement;
      const fileName = el.getAttribute("href")!;

      const client = new S3Client({
        region: "eu-west-2",
        credentials: fromCognitoIdentityPool({
          identityPoolId: "eu-west-2:10ec9814-d012-4768-b0ff-02d71d13ed2e",
          clientConfig: { region: "eu-west-2" },
        }),
      });

      const params = {
        Bucket: "montessori-garden",
        Key: `docs/procedures-policies${fileName}`,
      };
      const command = new GetObjectCommand(params);

      try {
        const response = await client.send(command);
        if (response.Body) {
          const array = await response.Body.transformToByteArray();
          const blob = new Blob([array], { type: "application/pdf" });
          const file = new File([blob], fileName);
          const url = URL.createObjectURL(file);

          window.open(url, "_blank");
          target.parentElement?.classList.remove("download--loading");
        }
      } catch (error: any) {
        alert("Error: " + error);
        target.parentElement?.classList.remove("download--loading");
      }
    });
  });
</script>

<style lang="scss">
  @import "../styles/vars.scss";
  @import "../styles/section.scss";

  .download--loading::after {
    content: "";
    position: fixed;
    width: 16px;
    height: 16px;
    top: 150px;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    border: 4px solid black;
    border-top-color: transparent;
    border-radius: 50%;
    animation: download-loading-spinner 1s ease infinite;
  }

  @keyframes download-loading-spinner {
    from {
      transform: rotate(0turn);
    }

    to {
      transform: rotate(1turn);
    }
  }
</style>
